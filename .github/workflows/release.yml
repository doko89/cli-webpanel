name: Build Binaries

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux]
        goarch: [amd64, 386, arm, arm64]
        goarm: ['', 6, 7] # goarm only apply for arm
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          GOARM: ${{ matrix.goarm }}
        run: |
          mkdir -p bin
          
          # Handle arm special cases
          if [ "${{ matrix.goarch }}" = "arm" ]; then
            if [ "${{ matrix.goarm }}" = "6" ]; then
              BINARY_NAME="webpanel-linux-arm-v6"
            elif [ "${{ matrix.goarm }}" = "7" ]; then
              BINARY_NAME="webpanel-linux-arm-v7"
            else
              echo "Invalid GOARM value for arm architecture"
              exit 1
            fi
          elif [ "${{ matrix.goarch }}" = "amd64" ]; then
            BINARY_NAME="webpanel-linux-amd64"
          elif [ "${{ matrix.goarch }}" = "386" ]; then
            BINARY_NAME="webpanel-linux-386"
          elif [ "${{ matrix.goarch }}" = "arm64" ]; then
            BINARY_NAME="webpanel-linux-arm64"
          else
            echo "Invalid GOARCH value"
            exit 1
          fi

          # Build binary
          if [ "${{ matrix.goarch }}" = "arm" ]; then
            GOARM=${{ matrix.goarm }} go build -o "bin/${BINARY_NAME}" cmd/webpanel/main.go
          else
            go build -o "bin/${BINARY_NAME}" cmd/webpanel/main.go
          fi
          
          # Create checksums
          sha256sum "bin/${BINARY_NAME}" > "bin/${BINARY_NAME}.sha256"
          
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: binaries-${{ matrix.goos }}-${{ matrix.goarch }}-${{ matrix.goarm }}
          path: bin/
